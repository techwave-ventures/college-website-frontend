{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/College%20Career/app/admin-dashboard/page.jsx"],"sourcesContent":["// \"use client\";\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n// import { Card, CardContent } from \"@/components/ui/card\";\r\n\r\n// export default function CreateCollegeForm() {\r\n//   const [exams, setExams] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     examId: \"\",\r\n//     data: {\r\n//       name: \"\",\r\n//       location: \"\",\r\n//       year: \"\",\r\n//       affiliation: \"\",\r\n//       type: \"\",\r\n//       admissionProcess: \"\",\r\n//       infrastructure: \"\",\r\n//       reviews: [{ user: \"\", rating: \"\", comment: \"\" }],\r\n//       courses: [\r\n//         {\r\n//           name: \"\",\r\n//           duration: \"\",\r\n//           branches: [{ bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }],\r\n//           fees: [{ category: \"\", amount: \"\" }],\r\n//           placements: { averageSalary: \"\", highestSalary: \"\" },\r\n//         },\r\n//       ],\r\n//     },\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchExams = async ()=>{\r\n//       try {\r\n//         const res= await axios.get(\"https://college-website-backend-main.onrender.com/apiv1/exam\");\r\n//         setExams(res.data.body);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n//     (async()=>{\r\n//       await fetchExams();\r\n//     })()\r\n//   }, []);\r\n\r\n//   const handleChange = (e, field, subField, index, subIndex, subSubIndex) => {\r\n//     const updatedData = { ...formData };\r\n\r\n//     if (subField === \"reviews\") {\r\n//       updatedData.data.reviews[index][field] = e.target.value;\r\n//     } else if (subField === \"courses\") {\r\n//       if (subIndex === undefined) {\r\n//         updatedData.data.courses[index][field] = e.target.value;\r\n//       } else if (subSubIndex === undefined) {\r\n//         updatedData.data.courses[index][subField][subIndex][field] = e.target.value;\r\n//       } else {\r\n//         updatedData.data.courses[index][subField][subIndex].cutOffs[subSubIndex][field] = e.target.value;\r\n//       }\r\n//     } else {\r\n//       updatedData.data[field] = e.target.value;\r\n//     }\r\n//     setFormData(updatedData);\r\n//   };\r\n\r\n//   const addReview = () => setFormData({ ...formData, data: { ...formData.data, reviews: [...formData.data.reviews, { user: \"\", rating: \"\", comment: \"\" }] } });\r\n//   const addCourse = () => setFormData({ ...formData, data: { ...formData.data, courses: [...formData.data.courses, { name: \"\", duration: \"\", branches: [{ bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }], fees: [{ category: \"\", amount: \"\" }], placements: { averageSalary: \"\", highestSalary: \"\" } }] } });\r\n//   const addBranch = (index) => setFormData({ ...formData, data: { ...formData.data, courses: formData.data.courses.map((c, i) => i === index ? { ...c, branches: [...c.branches, { bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }] } : c) } });\r\n//   const addCutoff = (courseIndex, branchIndex) => setFormData({ ...formData, data: { ...formData.data, courses: formData.data.courses.map((c, i) => i === courseIndex ? { ...c, branches: c.branches.map((b, j) => j === branchIndex ? { ...b, cutOffs: [...b.cutOffs, { name: \"\", image: \"\" }] } : b) } : c) } });\r\n\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       const response = await axios.post(\"https://college-website-backend-main.onrender.com/apiv1/college\", formData);\r\n//       alert(\"College created successfully!\");\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error creating college:\", error);\r\n//       alert(\"Failed to create college.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex justify-center items-center min-h-screen p-6\">\r\n//       <Card className=\"w-full max-w-3xl p-6\">\r\n//         <CardContent>\r\n//           <h2 className=\"text-2xl font-semibold mb-4\">Create College</h2>\r\n\r\n//           {/* Exam Selection */}\r\n//           <label className=\"block text-gray-700\">Select Exam:</label>\r\n//           <Select onValueChange={(value) => setFormData({ ...formData, examId: value })}>\r\n//             <SelectTrigger className=\"w-full mt-2\">\r\n//               <SelectValue placeholder=\"Choose an Exam\" />\r\n//             </SelectTrigger>\r\n//             <SelectContent>\r\n//               {exams.map((exam) => (\r\n//                 <SelectItem key={exam._id} value={exam._id}>{exam.name}</SelectItem>\r\n//               ))}\r\n//             </SelectContent>\r\n//           </Select>\r\n\r\n//           {/* College Details */}\r\n//           {Object.keys(formData.data).map((key) =>\r\n//             key !== \"reviews\" && key !== \"courses\" && key !== \"placements\" ? (\r\n//               <div key={key} className=\"mt-4\">\r\n//                 <label className=\"block text-gray-700\">{key.replace(/([A-Z])/g, \" $1\").trim()}:</label>\r\n//                 <Input type=\"text\" value={formData.data[key]} onChange={(e) => handleChange(e, key)} className=\"w-full mt-2\" />\r\n//               </div>\r\n//             ) : null\r\n//           )}\r\n\r\n//           {/* Reviews */}\r\n//           <h3 className=\"text-lg font-semibold mt-6\">Reviews</h3>\r\n//           {formData.data.reviews.map((review, index) => (\r\n//             <div key={index} className=\"mt-4\">\r\n//               <Input type=\"text\" placeholder=\"User\" value={review.user} onChange={(e) => handleChange(e, \"user\", \"reviews\", index)} />\r\n//               <Input type=\"text\" placeholder=\"Rating\" value={review.rating} onChange={(e) => handleChange(e, \"rating\", \"reviews\", index)} className=\"mt-2\" />\r\n//               <Input type=\"text\" placeholder=\"Comment\" value={review.comment} onChange={(e) => handleChange(e, \"comment\", \"reviews\", index)} className=\"mt-2\" />\r\n//             </div>\r\n//           ))}\r\n//           <Button className=\"mt-2 bg-green-500 hover:bg-green-700\" onClick={addReview}>+ Add Review</Button>\r\n\r\n//           {/* Courses */}\r\n//           <h3 className=\"text-lg font-semibold mt-6\">Courses</h3>\r\n//           {formData.data.courses.map((course, index) => (\r\n//             <div key={index} className=\"mt-4 border p-4 rounded-lg bg-gray-50\">\r\n//               <Input type=\"text\" placeholder=\"Course Name\" value={course.name} onChange={(e) => handleChange(e, \"name\", \"courses\", index)} />\r\n//               <Button className=\"mt-2 bg-blue-500 hover:bg-blue-700\" onClick={() => addBranch(index)}>+ Add Branch</Button>\r\n//               {course.branches.map((branch, bIndex) => (\r\n//                 <div key={bIndex} className=\"mt-2 p-2 border rounded bg-white\">\r\n//                   <Input type=\"text\" placeholder=\"Branch Name\" value={branch.bName} onChange={(e) => handleChange(e, \"bName\", \"branches\", index, bIndex)} />\r\n//                   <Button className=\"mt-2 bg-purple-500 hover:bg-purple-700\" onClick={() => addCutoff(index, bIndex)}>+ Add Cutoff</Button>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           ))}\r\n//           <Button className=\"mt-4 bg-blue-500 hover:bg-blue-700\" onClick={addCourse}>+ Add Course</Button>\r\n\r\n//           {/* Submit */}\r\n//           <Button className=\"w-full mt-6 bg-green-600 hover:bg-green-800\" onClick={handleSubmit}>\r\n//             Submit\r\n//           </Button>\r\n//         </CardContent>\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,+CAA+C;AAC/C,6BAA6B;AAC7B,mDAAmD;AACnD,iDAAiD;AACjD,0GAA0G;AAC1G,4DAA4D;AAE5D,gDAAgD;AAChD,4CAA4C;AAC5C,+CAA+C;AAC/C,kBAAkB;AAClB,cAAc;AACd,kBAAkB;AAClB,sBAAsB;AACtB,kBAAkB;AAClB,yBAAyB;AACzB,kBAAkB;AAClB,8BAA8B;AAC9B,4BAA4B;AAC5B,0DAA0D;AAC1D,mBAAmB;AACnB,YAAY;AACZ,sBAAsB;AACtB,0BAA0B;AAC1B,2EAA2E;AAC3E,kDAAkD;AAClD,kEAAkE;AAClE,aAAa;AACb,WAAW;AACX,SAAS;AACT,QAAQ;AAER,sBAAsB;AACtB,qCAAqC;AACrC,cAAc;AACd,sGAAsG;AACtG,mCAAmC;AACnC,0BAA0B;AAC1B,gCAAgC;AAChC,UAAU;AACV,QAAQ;AACR,kBAAkB;AAClB,4BAA4B;AAC5B,WAAW;AACX,YAAY;AAEZ,iFAAiF;AACjF,2CAA2C;AAE3C,oCAAoC;AACpC,iEAAiE;AACjE,2CAA2C;AAC3C,sCAAsC;AACtC,mEAAmE;AACnE,gDAAgD;AAChD,uFAAuF;AACvF,iBAAiB;AACjB,4GAA4G;AAC5G,UAAU;AACV,eAAe;AACf,kDAAkD;AAClD,QAAQ;AACR,gCAAgC;AAChC,OAAO;AAEP,kKAAkK;AAClK,kTAAkT;AAClT,mPAAmP;AACnP,sTAAsT;AAEtT,uCAAuC;AACvC,YAAY;AACZ,wHAAwH;AACxH,gDAAgD;AAChD,oCAAoC;AACpC,wBAAwB;AACxB,yDAAyD;AACzD,4CAA4C;AAC5C,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,0EAA0E;AAC1E,gDAAgD;AAChD,wBAAwB;AACxB,4EAA4E;AAE5E,mCAAmC;AACnC,wEAAwE;AACxE,4FAA4F;AAC5F,sDAAsD;AACtD,6DAA6D;AAC7D,+BAA+B;AAC/B,8BAA8B;AAC9B,uCAAuC;AACvC,uFAAuF;AACvF,oBAAoB;AACpB,+BAA+B;AAC/B,sBAAsB;AAEtB,oCAAoC;AACpC,qDAAqD;AACrD,iFAAiF;AACjF,iDAAiD;AACjD,0GAA0G;AAC1G,kIAAkI;AAClI,uBAAuB;AACvB,uBAAuB;AACvB,eAAe;AAEf,4BAA4B;AAC5B,oEAAoE;AACpE,4DAA4D;AAC5D,iDAAiD;AACjD,yIAAyI;AACzI,gKAAgK;AAChK,mKAAmK;AACnK,qBAAqB;AACrB,gBAAgB;AAChB,+GAA+G;AAE/G,4BAA4B;AAC5B,oEAAoE;AACpE,4DAA4D;AAC5D,kFAAkF;AAClF,gJAAgJ;AAChJ,8HAA8H;AAC9H,2DAA2D;AAC3D,kFAAkF;AAClF,+JAA+J;AAC/J,8IAA8I;AAC9I,yBAAyB;AACzB,oBAAoB;AACpB,qBAAqB;AACrB,gBAAgB;AAChB,6GAA6G;AAE7G,2BAA2B;AAC3B,oGAAoG;AACpG,qBAAqB;AACrB,sBAAsB;AACtB,yBAAyB;AACzB,gBAAgB;AAChB,aAAa;AACb,OAAO;AACP,IAAI","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file://D%3A/College%20Career/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file://D%3A/College%20Career/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA,eAAwB;YAAA;gBAAsB,EAAC,UAAA;oBAAA;oBAAA,CAEzG;oBAAA,yDAA4D;wBAC5D,KAAO,KAAA,CAAMC;wBAAAA,QAAc;4BAAA,GAAIX,CAAAA,gBAAmB;4BAAA;yBAAA;;mBAChDY,YAAY;;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;YAAA;SAAA;;SACNC,UAAU;cACV,IAAA;YAAA,MAAA,4BAA2C;iBAC3CC,MAAAA,MAAY,EAAA;wBAAA;4BACZC,KAAAA,CAAAA,GAAAA,EAAU,0MAAVA,CAAAA,sBAAU,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,+RAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACVC,OAAAA,mSAAU,EAAE,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,+RAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACAC;qBAAAA,MAAU;gBACRC,YAAYnB;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,YAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}