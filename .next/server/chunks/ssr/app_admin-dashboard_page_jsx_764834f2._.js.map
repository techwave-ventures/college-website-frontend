{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/College%20Career/app/admin-dashboard/page.jsx"],"sourcesContent":["// \"use client\";\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n// import { Card, CardContent } from \"@/components/ui/card\";\r\n\r\n// export default function CreateCollegeForm() {\r\n//   const [exams, setExams] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     examId: \"\",\r\n//     data: {\r\n//       name: \"\",\r\n//       location: \"\",\r\n//       year: \"\",\r\n//       affiliation: \"\",\r\n//       type: \"\",\r\n//       admissionProcess: \"\",\r\n//       infrastructure: \"\",\r\n//       reviews: [{ user: \"\", rating: \"\", comment: \"\" }],\r\n//       courses: [\r\n//         {\r\n//           name: \"\",\r\n//           duration: \"\",\r\n//           branches: [{ bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }],\r\n//           fees: [{ category: \"\", amount: \"\" }],\r\n//           placements: { averageSalary: \"\", highestSalary: \"\" },\r\n//         },\r\n//       ],\r\n//     },\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchExams = async ()=>{\r\n//       try {\r\n//         const res= await axios.get(\"https://college-website-backend-main.onrender.com/apiv1/exam\");\r\n//         setExams(res.data.body);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n//     (async()=>{\r\n//       await fetchExams();\r\n//     })()\r\n//   }, []);\r\n\r\n//   const handleChange = (e, field, subField, index, subIndex, subSubIndex) => {\r\n//     const updatedData = { ...formData };\r\n\r\n//     if (subField === \"reviews\") {\r\n//       updatedData.data.reviews[index][field] = e.target.value;\r\n//     } else if (subField === \"courses\") {\r\n//       if (subIndex === undefined) {\r\n//         updatedData.data.courses[index][field] = e.target.value;\r\n//       } else if (subSubIndex === undefined) {\r\n//         updatedData.data.courses[index][subField][subIndex][field] = e.target.value;\r\n//       } else {\r\n//         updatedData.data.courses[index][subField][subIndex].cutOffs[subSubIndex][field] = e.target.value;\r\n//       }\r\n//     } else {\r\n//       updatedData.data[field] = e.target.value;\r\n//     }\r\n//     setFormData(updatedData);\r\n//   };\r\n\r\n//   const addReview = () => setFormData({ ...formData, data: { ...formData.data, reviews: [...formData.data.reviews, { user: \"\", rating: \"\", comment: \"\" }] } });\r\n//   const addCourse = () => setFormData({ ...formData, data: { ...formData.data, courses: [...formData.data.courses, { name: \"\", duration: \"\", branches: [{ bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }], fees: [{ category: \"\", amount: \"\" }], placements: { averageSalary: \"\", highestSalary: \"\" } }] } });\r\n//   const addBranch = (index) => setFormData({ ...formData, data: { ...formData.data, courses: formData.data.courses.map((c, i) => i === index ? { ...c, branches: [...c.branches, { bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }] } : c) } });\r\n//   const addCutoff = (courseIndex, branchIndex) => setFormData({ ...formData, data: { ...formData.data, courses: formData.data.courses.map((c, i) => i === courseIndex ? { ...c, branches: c.branches.map((b, j) => j === branchIndex ? { ...b, cutOffs: [...b.cutOffs, { name: \"\", image: \"\" }] } : b) } : c) } });\r\n\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       const response = await axios.post(\"https://college-website-backend-main.onrender.com/apiv1/college\", formData);\r\n//       alert(\"College created successfully!\");\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error creating college:\", error);\r\n//       alert(\"Failed to create college.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex justify-center items-center min-h-screen p-6\">\r\n//       <Card className=\"w-full max-w-3xl p-6\">\r\n//         <CardContent>\r\n//           <h2 className=\"text-2xl font-semibold mb-4\">Create College</h2>\r\n\r\n//           {/* Exam Selection */}\r\n//           <label className=\"block text-gray-700\">Select Exam:</label>\r\n//           <Select onValueChange={(value) => setFormData({ ...formData, examId: value })}>\r\n//             <SelectTrigger className=\"w-full mt-2\">\r\n//               <SelectValue placeholder=\"Choose an Exam\" />\r\n//             </SelectTrigger>\r\n//             <SelectContent>\r\n//               {exams.map((exam) => (\r\n//                 <SelectItem key={exam._id} value={exam._id}>{exam.name}</SelectItem>\r\n//               ))}\r\n//             </SelectContent>\r\n//           </Select>\r\n\r\n//           {/* College Details */}\r\n//           {Object.keys(formData.data).map((key) =>\r\n//             key !== \"reviews\" && key !== \"courses\" && key !== \"placements\" ? (\r\n//               <div key={key} className=\"mt-4\">\r\n//                 <label className=\"block text-gray-700\">{key.replace(/([A-Z])/g, \" $1\").trim()}:</label>\r\n//                 <Input type=\"text\" value={formData.data[key]} onChange={(e) => handleChange(e, key)} className=\"w-full mt-2\" />\r\n//               </div>\r\n//             ) : null\r\n//           )}\r\n\r\n//           {/* Reviews */}\r\n//           <h3 className=\"text-lg font-semibold mt-6\">Reviews</h3>\r\n//           {formData.data.reviews.map((review, index) => (\r\n//             <div key={index} className=\"mt-4\">\r\n//               <Input type=\"text\" placeholder=\"User\" value={review.user} onChange={(e) => handleChange(e, \"user\", \"reviews\", index)} />\r\n//               <Input type=\"text\" placeholder=\"Rating\" value={review.rating} onChange={(e) => handleChange(e, \"rating\", \"reviews\", index)} className=\"mt-2\" />\r\n//               <Input type=\"text\" placeholder=\"Comment\" value={review.comment} onChange={(e) => handleChange(e, \"comment\", \"reviews\", index)} className=\"mt-2\" />\r\n//             </div>\r\n//           ))}\r\n//           <Button className=\"mt-2 bg-green-500 hover:bg-green-700\" onClick={addReview}>+ Add Review</Button>\r\n\r\n//           {/* Courses */}\r\n//           <h3 className=\"text-lg font-semibold mt-6\">Courses</h3>\r\n//           {formData.data.courses.map((course, index) => (\r\n//             <div key={index} className=\"mt-4 border p-4 rounded-lg bg-gray-50\">\r\n//               <Input type=\"text\" placeholder=\"Course Name\" value={course.name} onChange={(e) => handleChange(e, \"name\", \"courses\", index)} />\r\n//               <Button className=\"mt-2 bg-blue-500 hover:bg-blue-700\" onClick={() => addBranch(index)}>+ Add Branch</Button>\r\n//               {course.branches.map((branch, bIndex) => (\r\n//                 <div key={bIndex} className=\"mt-2 p-2 border rounded bg-white\">\r\n//                   <Input type=\"text\" placeholder=\"Branch Name\" value={branch.bName} onChange={(e) => handleChange(e, \"bName\", \"branches\", index, bIndex)} />\r\n//                   <Button className=\"mt-2 bg-purple-500 hover:bg-purple-700\" onClick={() => addCutoff(index, bIndex)}>+ Add Cutoff</Button>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           ))}\r\n//           <Button className=\"mt-4 bg-blue-500 hover:bg-blue-700\" onClick={addCourse}>+ Add Course</Button>\r\n\r\n//           {/* Submit */}\r\n//           <Button className=\"w-full mt-6 bg-green-600 hover:bg-green-800\" onClick={handleSubmit}>\r\n//             Submit\r\n//           </Button>\r\n//         </CardContent>\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// }\r\n\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\n\r\nexport default function CreateCollegeForm() {\r\n  const [exams, setExams] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    examId: \"\",\r\n    data: {\r\n      name: \"\",\r\n      dteCode: \"\",\r\n      location: \"\",\r\n      year: \"\",\r\n      affiliation: \"\",\r\n      type: \"\",\r\n      admissionProcess: \"\",\r\n      infrastructure: \"\",\r\n      reviews: [{ user: \"\", rating: \"\", comment: \"\" }],\r\n      courses: [\r\n        {\r\n          name: \"\",\r\n          duration: \"\",\r\n          branches: [{ bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }],\r\n          fees: [{ category: \"\", amount: \"\" }],\r\n          placements: { averageSalary: \"\", highestSalary: \"\" },\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  // Fetch exam list\r\n  useEffect(() => {\r\n    const fetchExams = async () => {\r\n      try {\r\n        const res = await axios.get(\"https://college-website-backend-main.onrender.com/apiv1/exam\");\r\n        setExams(res.data.body);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchExams();\r\n  }, []);\r\n\r\n  // Fetch details of selected exam\r\n  const handleExamSelect = async (examId) => {\r\n    setFormData((prev) => ({ ...prev, examId }));\r\n\r\n    try {\r\n      const res = await axios.get(`https://college-website-backend-main.onrender.com/apiv1/exam/${examId}`);\r\n      const { collegeName, dteCode } = res.data;\r\n\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        data: {\r\n          ...prev.data,\r\n          name: collegeName || prev.data.name,\r\n          dteCode: dteCode || \"\",\r\n        },\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching exam details:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e, field, subField, index, subIndex, subSubIndex) => {\r\n    const updatedData = { ...formData };\r\n\r\n    if (subField === \"reviews\") {\r\n      updatedData.data.reviews[index][field] = e.target.value;\r\n    } else if (subField === \"courses\") {\r\n      if (subIndex === undefined) {\r\n        updatedData.data.courses[index][field] = e.target.value;\r\n      } else if (subSubIndex === undefined) {\r\n        updatedData.data.courses[index].branches[subIndex][field] = e.target.value;\r\n      } else {\r\n        updatedData.data.courses[index].branches[subIndex].cutOffs[subSubIndex][field] = e.target.value;\r\n      }\r\n    } else {\r\n      updatedData.data[field] = e.target.value;\r\n    }\r\n\r\n    setFormData(updatedData);\r\n  };\r\n\r\n  const addReview = () =>\r\n    setFormData({\r\n      ...formData,\r\n      data: { ...formData.data, reviews: [...formData.data.reviews, { user: \"\", rating: \"\", comment: \"\" }] },\r\n    });\r\n\r\n  const addCourse = () =>\r\n    setFormData({\r\n      ...formData,\r\n      data: {\r\n        ...formData.data,\r\n        courses: [\r\n          ...formData.data.courses,\r\n          {\r\n            name: \"\",\r\n            duration: \"\",\r\n            branches: [{ bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }],\r\n            fees: [{ category: \"\", amount: \"\" }],\r\n            placements: { averageSalary: \"\", highestSalary: \"\" },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n\r\n  const addBranch = (index) =>\r\n    setFormData({\r\n      ...formData,\r\n      data: {\r\n        ...formData.data,\r\n        courses: formData.data.courses.map((c, i) =>\r\n          i === index ? { ...c, branches: [...c.branches, { bName: \"\", cutOffs: [{ name: \"\", image: \"\" }] }] } : c\r\n        ),\r\n      },\r\n    });\r\n\r\n  const addCutoff = (courseIndex, branchIndex) =>\r\n    setFormData({\r\n      ...formData,\r\n      data: {\r\n        ...formData.data,\r\n        courses: formData.data.courses.map((c, i) =>\r\n          i === courseIndex\r\n            ? {\r\n                ...c,\r\n                branches: c.branches.map((b, j) =>\r\n                  j === branchIndex ? { ...b, cutOffs: [...b.cutOffs, { name: \"\", image: \"\" }] } : b\r\n                ),\r\n              }\r\n            : c\r\n        ),\r\n      },\r\n    });\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://college-website-backend-main.onrender.com/apiv1/college\",\r\n        formData\r\n      );\r\n      alert(\"College created successfully!\");\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error creating college:\", error);\r\n      alert(\"Failed to create college.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-screen p-6\">\r\n      <Card className=\"w-full max-w-3xl p-6\">\r\n        <CardContent>\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Create College</h2>\r\n\r\n          {/* Exam Selection */}\r\n          <label className=\"block text-gray-700\">Select Exam:</label>\r\n          <Select onValueChange={(value) => handleExamSelect(value)}>\r\n            <SelectTrigger className=\"w-full mt-2\">\r\n              <SelectValue placeholder=\"Choose an Exam\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {exams.map((exam) => (\r\n                <SelectItem key={exam._id} value={exam._id}>\r\n                  {exam.name}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n\r\n          {/* College Details */}\r\n          {Object.keys(formData.data).map(\r\n            (key) =>\r\n              key !== \"reviews\" &&\r\n              key !== \"courses\" &&\r\n              key !== \"placements\" && (\r\n                <div key={key} className=\"mt-4\">\r\n                  <label className=\"block text-gray-700\">\r\n                    {key.replace(/([A-Z])/g, \" $1\").trim()}:\r\n                  </label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={formData.data[key]}\r\n                    onChange={(e) => handleChange(e, key)}\r\n                    className=\"w-full mt-2\"\r\n                  />\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          {/* Reviews */}\r\n          <h3 className=\"text-lg font-semibold mt-6\">Reviews</h3>\r\n          {formData.data.reviews.map((review, index) => (\r\n            <div key={index} className=\"mt-4\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"User\"\r\n                value={review.user}\r\n                onChange={(e) => handleChange(e, \"user\", \"reviews\", index)}\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Rating\"\r\n                value={review.rating}\r\n                onChange={(e) => handleChange(e, \"rating\", \"reviews\", index)}\r\n                className=\"mt-2\"\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Comment\"\r\n                value={review.comment}\r\n                onChange={(e) => handleChange(e, \"comment\", \"reviews\", index)}\r\n                className=\"mt-2\"\r\n              />\r\n            </div>\r\n          ))}\r\n          <Button\r\n            className=\"mt-2 bg-green-500 hover:bg-green-700\"\r\n            onClick={addReview}\r\n          >\r\n            + Add Review\r\n          </Button>\r\n\r\n          {/* Courses */}\r\n          <h3 className=\"text-lg font-semibold mt-6\">Courses</h3>\r\n          {formData.data.courses.map((course, index) => (\r\n            <div key={index} className=\"mt-4 border p-4 rounded-lg bg-gray-50\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Course Name\"\r\n                value={course.name}\r\n                onChange={(e) => handleChange(e, \"name\", \"courses\", index)}\r\n              />\r\n              <Button\r\n                className=\"mt-2 bg-blue-500 hover:bg-blue-700\"\r\n                onClick={() => addBranch(index)}\r\n              >\r\n                + Add Branch\r\n              </Button>\r\n              {course.branches.map((branch, bIndex) => (\r\n                <div\r\n                  key={bIndex}\r\n                  className=\"mt-2 p-2 border rounded bg-white\"\r\n                >\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Branch Name\"\r\n                    value={branch.bName}\r\n                    onChange={(e) =>\r\n                      handleChange(e, \"bName\", \"courses\", index, bIndex)\r\n                    }\r\n                  />\r\n                  <Button\r\n                    className=\"mt-2 bg-purple-500 hover:bg-purple-700\"\r\n                    onClick={() => addCutoff(index, bIndex)}\r\n                  >\r\n                    + Add Cutoff\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n          <Button\r\n            className=\"mt-4 bg-blue-500 hover:bg-blue-700\"\r\n            onClick={addCourse}\r\n          >\r\n            + Add Course\r\n          </Button>\r\n\r\n          {/* Submit */}\r\n          <Button\r\n            className=\"w-full mt-6 bg-green-600 hover:bg-green-800\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}